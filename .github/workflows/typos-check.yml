name: Check Typos in Pull Request

on: [pull_request]

jobs:
  check-typos:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.14.0-alpha.1'

      - name: Install typos
        run: |
          python3 -m pip install --upgrade pip
          pip install typos

      - name: Get changed files
        id: changed-files
        run: |
          set -e
          echo "Listing changed files..."

          git fetch --all
          base_commit=$(git rev-parse origin/${{ github.base_ref }})
          current_commit=$(git rev-parse HEAD)
          echo "Base commit: $base_commit"
          echo "Current commit: $current_commit"

          changed_files=$(git diff --name-only $base_commit $current_commit || true)
          echo "Changed files: $changed_files"

          if [ -z "$changed_files" ]; then
            echo "CHANGED_FILES=false" >> $GITHUB_ENV
          else
            echo "CHANGED_FILES=true" >> $GITHUB_ENV
            echo "$changed_files" | tr ' ' '\n' > changed_files.txt
            echo "CHANGED_FILE_LIST=changed_files.txt" >> $GITHUB_ENV
          fi

      - name: Check if files have changed
        id: check-files
        run: |
          if [ "${{ env.CHANGED_FILES }}" == "true" ]; then
            echo "Files have changed."
            echo "RUN_SCRIPTS=true" >> $GITHUB_ENV
          else
            echo "No files changed."
            echo "RUN_SCRIPTS=false" >> $GITHUB_ENV
          fi

      - name: Check typos in changed files and comment on PR
        if: ${{ env.RUN_SCRIPTS == 'true' }}
        run: |
          set -e
          echo "Checking typos in changed files..."

          while IFS= read -r file; do
            echo "Checking typos in $file"

            # Run typos checker and capture output, including errors
            typos "$file" --format brief > "$typos_output" || true

            echo "typos output for $file:"
            cat "$typos_output"

            # Check if typos output exists
            if [[ -n "$typos_output" ]]; then
              echo "Typos found in $file:"
              echo "$typos_output"

              # Parse the typos output line by line
              while IFS= read -r line; do
                if [[ $line =~ ^(.*):([0-9]+):([0-9]+):\ \`([^\`]+)\`\ \-\>\ \`([^\`]+)\`$ ]]; then
                  file_path="${BASH_REMATCH[1]}"
                  line_number="${BASH_REMATCH[2]}"
                  char_index="${BASH_REMATCH[3]}"
                  typo="${BASH_REMATCH[4]}"
                  suggestion="${BASH_REMATCH[5]}"

                  # Format the comment for the typo
                  comment="**Typo**: \`$typo\` should be \`$suggestion\`."

                  # Post the review comment using GitHub API
                  curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                    -d '{
                        "body": "'"$comment"'",
                        "commit_id": "${{ github.sha }}",
                        "path": "'"$file_path"'",
                        "position": '"$char_index"',
                        "line": '"$line_number"',
                        "side": "RIGHT"
                      }' \
                    "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/reviews"
                fi
              done <<< "$typos_output"
            else
              echo "No typos found in $file."
            fi
          done < ${{ env.CHANGED_FILE_LIST }}
